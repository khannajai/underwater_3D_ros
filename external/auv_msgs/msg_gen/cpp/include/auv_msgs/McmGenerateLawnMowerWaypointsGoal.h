/* Auto-generated by genmsg_cpp for file /home/osl/src/hwu-osl-ros-pkg/hwu_osl_common/auv_msgs/msg/McmGenerateLawnMowerWaypointsGoal.msg */
#ifndef AUV_MSGS_MESSAGE_MCMGENERATELAWNMOWERWAYPOINTSGOAL_H
#define AUV_MSGS_MESSAGE_MCMGENERATELAWNMOWERWAYPOINTSGOAL_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace auv_msgs
{
template <class ContainerAllocator>
struct McmGenerateLawnMowerWaypointsGoal_ {
  typedef McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> Type;

  McmGenerateLawnMowerWaypointsGoal_()
  : wp_variable_prefix()
  {
  }

  McmGenerateLawnMowerWaypointsGoal_(const ContainerAllocator& _alloc)
  : wp_variable_prefix(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _wp_variable_prefix_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  wp_variable_prefix;


  typedef boost::shared_ptr< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct McmGenerateLawnMowerWaypointsGoal
typedef  ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<std::allocator<void> > McmGenerateLawnMowerWaypointsGoal;

typedef boost::shared_ptr< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal> McmGenerateLawnMowerWaypointsGoalPtr;
typedef boost::shared_ptr< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal const> McmGenerateLawnMowerWaypointsGoalConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace auv_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cb5685b2f116373c30c42f71677aa6f5";
  }

  static const char* value(const  ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xcb5685b2f116373cULL;
  static const uint64_t static_value2 = 0x30c42f71677aa6f5ULL;
};

template<class ContainerAllocator>
struct DataType< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "auv_msgs/McmGenerateLawnMowerWaypointsGoal";
  }

  static const char* value(const  ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#the pddl name to store the result in, WP maps to WP1, WP2 .. WPn\n\
string wp_variable_prefix\n\
\n\
";
  }

  static const char* value(const  ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.wp_variable_prefix);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct McmGenerateLawnMowerWaypointsGoal_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::auv_msgs::McmGenerateLawnMowerWaypointsGoal_<ContainerAllocator> & v) 
  {
    s << indent << "wp_variable_prefix: ";
    Printer<std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other > >::stream(s, indent + "  ", v.wp_variable_prefix);
  }
};


} // namespace message_operations
} // namespace ros

#endif // AUV_MSGS_MESSAGE_MCMGENERATELAWNMOWERWAYPOINTSGOAL_H

