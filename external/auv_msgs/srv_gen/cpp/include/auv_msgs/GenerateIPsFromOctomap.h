/* Auto-generated by genmsg_cpp for file /home/osl/src/hwu-osl-ros-pkg/hwu_osl_common/auv_msgs/srv/GenerateIPsFromOctomap.srv */
#ifndef AUV_MSGS_SERVICE_GENERATEIPSFROMOCTOMAP_H
#define AUV_MSGS_SERVICE_GENERATEIPSFROMOCTOMAP_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "auv_msgs/SphereArray.h"


#include "auv_msgs/NEDArray.h"

namespace auv_msgs
{
template <class ContainerAllocator>
struct GenerateIPsFromOctomapRequest_ {
  typedef GenerateIPsFromOctomapRequest_<ContainerAllocator> Type;

  GenerateIPsFromOctomapRequest_()
  : octomap_id()
  , inspection_volume()
  {
  }

  GenerateIPsFromOctomapRequest_(const ContainerAllocator& _alloc)
  : octomap_id(_alloc)
  , inspection_volume(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _octomap_id_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  octomap_id;

  typedef  ::auv_msgs::SphereArray_<ContainerAllocator>  _inspection_volume_type;
   ::auv_msgs::SphereArray_<ContainerAllocator>  inspection_volume;


  typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GenerateIPsFromOctomapRequest
typedef  ::auv_msgs::GenerateIPsFromOctomapRequest_<std::allocator<void> > GenerateIPsFromOctomapRequest;

typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapRequest> GenerateIPsFromOctomapRequestPtr;
typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapRequest const> GenerateIPsFromOctomapRequestConstPtr;


template <class ContainerAllocator>
struct GenerateIPsFromOctomapResponse_ {
  typedef GenerateIPsFromOctomapResponse_<ContainerAllocator> Type;

  GenerateIPsFromOctomapResponse_()
  : ips()
  {
  }

  GenerateIPsFromOctomapResponse_(const ContainerAllocator& _alloc)
  : ips(_alloc)
  {
  }

  typedef  ::auv_msgs::NEDArray_<ContainerAllocator>  _ips_type;
   ::auv_msgs::NEDArray_<ContainerAllocator>  ips;


  typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct GenerateIPsFromOctomapResponse
typedef  ::auv_msgs::GenerateIPsFromOctomapResponse_<std::allocator<void> > GenerateIPsFromOctomapResponse;

typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapResponse> GenerateIPsFromOctomapResponsePtr;
typedef boost::shared_ptr< ::auv_msgs::GenerateIPsFromOctomapResponse const> GenerateIPsFromOctomapResponseConstPtr;

struct GenerateIPsFromOctomap
{

typedef GenerateIPsFromOctomapRequest Request;
typedef GenerateIPsFromOctomapResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GenerateIPsFromOctomap
} // namespace auv_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f85f2ed9b8b9f0adb1674e19ebcde012";
  }

  static const char* value(const  ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf85f2ed9b8b9f0adULL;
  static const uint64_t static_value2 = 0xb1674e19ebcde012ULL;
};

template<class ContainerAllocator>
struct DataType< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "auv_msgs/GenerateIPsFromOctomapRequest";
  }

  static const char* value(const  ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
string octomap_id\n\
SphereArray inspection_volume\n\
\n\
================================================================================\n\
MSG: auv_msgs/SphereArray\n\
Sphere[] spheres\n\
\n\
================================================================================\n\
MSG: auv_msgs/Sphere\n\
geometry_msgs/Point center\n\
float64 radius\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Point\n\
# This contains the position of a point in free space\n\
float64 x\n\
float64 y\n\
float64 z\n\
\n\
";
  }

  static const char* value(const  ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "b432245c714a0cad9b27ca2d20859f85";
  }

  static const char* value(const  ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xb432245c714a0cadULL;
  static const uint64_t static_value2 = 0x9b27ca2d20859f85ULL;
};

template<class ContainerAllocator>
struct DataType< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "auv_msgs/GenerateIPsFromOctomapResponse";
  }

  static const char* value(const  ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
NEDArray ips\n\
\n\
\n\
================================================================================\n\
MSG: auv_msgs/NEDArray\n\
NED[] neds\n\
\n\
================================================================================\n\
MSG: auv_msgs/NED\n\
# Position or velocity in the right-handed NED coordinate frame.\n\
\n\
# metres north, positive towards true north.\n\
float64 north\n\
\n\
# metres east, positive towards true east.\n\
float64 east\n\
\n\
# metres down, positive towards the centre of the earth.\n\
float64 depth\n\
\n\
";
  }

  static const char* value(const  ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.octomap_id);
    stream.next(m.inspection_volume);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GenerateIPsFromOctomapRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.ips);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GenerateIPsFromOctomapResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<auv_msgs::GenerateIPsFromOctomap> {
  static const char* value() 
  {
    return "ae1fc104a517cdd815ff2270e013be6c";
  }

  static const char* value(const auv_msgs::GenerateIPsFromOctomap&) { return value(); } 
};

template<>
struct DataType<auv_msgs::GenerateIPsFromOctomap> {
  static const char* value() 
  {
    return "auv_msgs/GenerateIPsFromOctomap";
  }

  static const char* value(const auv_msgs::GenerateIPsFromOctomap&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ae1fc104a517cdd815ff2270e013be6c";
  }

  static const char* value(const auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "auv_msgs/GenerateIPsFromOctomap";
  }

  static const char* value(const auv_msgs::GenerateIPsFromOctomapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ae1fc104a517cdd815ff2270e013be6c";
  }

  static const char* value(const auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "auv_msgs/GenerateIPsFromOctomap";
  }

  static const char* value(const auv_msgs::GenerateIPsFromOctomapResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // AUV_MSGS_SERVICE_GENERATEIPSFROMOCTOMAP_H

